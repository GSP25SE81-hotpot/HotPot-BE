pipeline {
    agent any
    
    environment {
        DOTNET_CLI_HOME = '/tmp/dotnet_cli_home'
        DOCKER_REGISTRY = ''
        IMAGE_NAME = 'capstonehptyapi'
        IMAGE_TAG = "${env.BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                sh 'dotnet restore'
                sh 'dotnet build --configuration Release'
            }
        }
        
        stage('Test') {
            steps {
                sh 'dotnet test --configuration Release --no-build || true'
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f Capstone.SRHP.API/Dockerfile ."
                    sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
                }
            }
        }
        
        stage('Deploy Development') {
            steps {
                script {
                    sh "docker-compose down || true"
                    sh "docker-compose up -d"
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}